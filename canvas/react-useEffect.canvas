{
	"nodes":[
		{"type":"group","id":"e544ee41acd34537","x":-1480,"y":-280,"width":3096,"height":1290,"label":"useEffect"},
		{"type":"text","text":"useEffect","id":"417ea2472ee5e5fb","x":-1460,"y":420,"width":250,"height":60},
		{"type":"text","text":"commit - commitRoot\n","id":"4f3786a3c944d142","x":-1000,"y":835,"width":250,"height":60},
		{"type":"text","text":"什么触发","id":"27e9be55864759d2","x":-976,"y":136,"width":250,"height":60},
		{"type":"text","text":"render--workLoop","id":"7c82403a5edaa2f3","x":-976,"y":420,"width":250,"height":60},
		{"type":"text","text":"beginwork 判断类型 - fc","id":"af4c7c3e45f5f589","x":-581,"y":420,"width":400,"height":60},
		{"type":"text","text":"触发 effect 回调\nmount\n依赖变化","id":"2bc3822a0ba37c7f","x":-540,"y":-180,"width":250,"height":125},
		{"type":"text","text":"mount","id":"606704155b3a6204","x":-540,"y":76,"width":250,"height":60},
		{"type":"text","text":"update","id":"1aaa71fa86117158","x":-540,"y":196,"width":250,"height":60},
		{"type":"text","text":"layou 之前做两件事\n1. 构建workInprocess 的 dom tree\n2. 将 mount 和 effect 添加到 集合 root.pendingPassiveEffects={unmount:[ ], update: [ ]}，进行回调的收集","id":"c96b9d41d4235e50","x":-540,"y":758,"width":433,"height":215},
		{"type":"text","text":"hook3: effect2","id":"45df21b584045251","x":1304,"y":350,"width":176,"height":60,"color":"1"},
		{"type":"text","text":"本次更新的任何`create`回调都必须在所有上一次更新的`destroy`回调执行完后再执行。\n1.  遍历`effect`\n2.  首先触发所有`unmount effect`，且对于某个`fiber`，如果触发了`unmount destroy`，本次更新不会再触发`update create`\n3.  触发所有上次更新的`destroy`\n4.  触发所有这次更新的`create`","id":"71794d057fe9f71c","x":844,"y":740,"width":752,"height":250},
		{"type":"text","text":"mountEffect","id":"01ede821d3d8cc49","x":-27,"y":350,"width":250,"height":60},
		{"type":"text","text":"updateEffect","id":"04cae298621cf760","x":-27,"y":550,"width":250,"height":60},
		{"type":"text","text":"fiberNode.memoizedState","id":"99cb1c03f6607234","x":320,"y":350,"width":340,"height":60},
		{"type":"text","text":"跟 mountEffect 同样流程。\n1. 添加 destroy \n2. 判断一下 deps 是否更新，如果更新，添加 HookHasEffect  标识","id":"3e9a25ffd0a5e6db","x":320,"y":480,"width":340,"height":200},
		{"type":"text","text":"flushPassiveEffects 执行 effect 的 副作用\n1. 先遍历 unmount\n2. 后边里 update","id":"76bf01ba7e62f3f4","x":107,"y":788,"width":427,"height":155},
		{"type":"text","text":"hook1:effect","id":"3033267931402718","x":860,"y":350,"width":180,"height":60,"color":"1"},
		{"type":"text","text":"hook2","id":"918d10025983300b","x":1120,"y":350,"width":140,"height":60,"color":"1"},
		{"id":"f7ea4d5781f5a96a","x":-1183,"y":1115,"width":1543,"height":1125,"type":"text","text":"commit useEffect\n\n1.  如果有副作用，异步异步异步异步异步 调度并**按顺序**执行相应的 副作用 , 卸载的 destroy----更新的 destroy----更新的 creata\n    \n2.  如果没有 执行之前的 commitMutationEffects，添加一个收集的逻辑\n    \n    1.  插入节点\n    2.  修改属性\n    3.  删除节点\n    4.  收集回调\n        1.  unmount : []\n        2.  update: []\n            \n\n3.  beginWork 的 mount 阶段\n    \n    1.  创建 hook,\n        \n    2.  添加一个需要执行副作用的 effect\n        \n4.  beginWork 的 update 阶段\n    \n    1.  创建 hook，前后是否数量相同\n        \n    2.  deps 浅比较，hook.memoizedState = effect1\n        \n        1.  [] 或者 相同，添加一个不需要执行副作用的 effect1\n            \n        2.  不同，添加一个需要执行副作用的 effect1\n            \n5.  completeWork 冒泡副作用标记"}
	],
	"edges":[
		{"id":"dcf197880b30aecd","fromNode":"7c82403a5edaa2f3","fromSide":"right","toNode":"af4c7c3e45f5f589","toSide":"left"},
		{"id":"9760937c2dd818e2","fromNode":"af4c7c3e45f5f589","fromSide":"right","toNode":"01ede821d3d8cc49","toSide":"left"},
		{"id":"c3682933f86c6afe","fromNode":"01ede821d3d8cc49","fromSide":"right","toNode":"99cb1c03f6607234","toSide":"left"},
		{"id":"17a3446fa9fb1a9c","fromNode":"99cb1c03f6607234","fromSide":"right","toNode":"3033267931402718","toSide":"left"},
		{"id":"88ee4401bbb40283","fromNode":"3033267931402718","fromSide":"right","toNode":"918d10025983300b","toSide":"left"},
		{"id":"e3bc67be87a6800c","fromNode":"918d10025983300b","fromSide":"right","toNode":"45df21b584045251","toSide":"left"},
		{"id":"fdd275c3d47b345e","fromNode":"af4c7c3e45f5f589","fromSide":"right","toNode":"04cae298621cf760","toSide":"left"},
		{"id":"9b62d32d5c79d805","fromNode":"04cae298621cf760","fromSide":"right","toNode":"3e9a25ffd0a5e6db","toSide":"left"},
		{"id":"e1de7a3317d28232","fromNode":"3e9a25ffd0a5e6db","fromSide":"top","toNode":"99cb1c03f6607234","toSide":"bottom"},
		{"id":"591395c8a20b7ffc","fromNode":"4f3786a3c944d142","fromSide":"right","toNode":"c96b9d41d4235e50","toSide":"left"},
		{"id":"e91860a18b3ca557","fromNode":"c96b9d41d4235e50","fromSide":"right","toNode":"76bf01ba7e62f3f4","toSide":"left"},
		{"id":"e249eb1ab06730f7","fromNode":"76bf01ba7e62f3f4","fromSide":"right","toNode":"71794d057fe9f71c","toSide":"left","label":"先后顺序"},
		{"id":"ef208e78ccce2138","fromNode":"417ea2472ee5e5fb","fromSide":"right","toNode":"27e9be55864759d2","toSide":"left"},
		{"id":"c4281075c3c3ec05","fromNode":"417ea2472ee5e5fb","fromSide":"right","toNode":"7c82403a5edaa2f3","toSide":"left"},
		{"id":"c8aaf986f41f2060","fromNode":"417ea2472ee5e5fb","fromSide":"right","toNode":"4f3786a3c944d142","toSide":"left"},
		{"id":"6380bb37f9883d1b","fromNode":"3033267931402718","fromSide":"top","toNode":"45df21b584045251","toSide":"top","label":"memoizedState"}
	]
}